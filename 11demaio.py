# -*- coding: utf-8 -*-
"""11demaio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14AWTnJzaB6JRDdzWOtEYhC4T9KJvdjBJ

# LISTAS COMPOSTAS

> LISTAS DENTRO DE LISTAS

Podemos criar uma lista dessa forma:

> pessoas = [] com colchetes

> pessoas = list() com a função 'list'

# Exercicio

Vamos criar uma lista de alunos do curso de python

a lista deve conter o nome e a idade do aluno

Ana com 22 anos

manoel com 31

zigoto com 40
"""

#Exemplo de lista simples

alunos=[]

alunos.append('Ana')
alunos.append(22)

print(alunos)

#@title exemplo de lista composta

turma=list() # O outro jeito de fazer uma lista

print(turma)

turma.append(alunos[:])  #inserindo a lista alunos na lista turma

print(turma)

"""# Não se esqueça da difereça de incluir uma copia [:]

cada lista tem seu indice
"""

# Completando a lista composta

turma.append(['Manoel',31])
turma.append(['Zigoto',40])

print(turma)

print(turma[0])
print(turma[1])
print(turma[2])

print(turma[0][0])
print(turma[0][1])

print(turma[1][0])

# @title Apagando uma lista
print(turma)
turma.pop() # Apagando o ultimo da lista

#turma.clear()  apagando toda a lista

print(turma)

# criando lista de outra forma

print(turma)

turma= [['Ana',22,'F'],['Manuel',31,'M'],['Zigoto',40,'M']]

print(turma)

turma.remove([2])

# @title Interando pelos elementos da lista

print(turma)
for aluno in turma:
    print(f'{aluno[0]}  tem {aluno[1]} e é do sexo {aluno[2]}')

"""# Exercicio

crie um progama que ped o nome e idade de cada pessa e insere em uma lista.

Use duas listas para conseguir isso.

Uma delas é a lista princpal e outra será auxiliar.

Depois de obter os dados, apague os dados da lista auxiliar

"""

# @title inserindo dados com ajuda do usuário



nave=list()
alien=list()

for grey  in  range(0, 5):

    alien.append(str(input('Digite o nome do alien ')))
    alien.append(int(input('Digite a idade do maluco ')))
    print('alien a bordo')
    nave.append(alien[:])
    nave.clear()
print(nave)

nave=list()
alien=list()

for grey  in  range(0, 2):
  alien.append(str(input('Digite o nome do alien ')))
  alien.append(int(input('Digite a idade do maluco ')))
  print('alien a bordo')
  nave.append(alien[:])
  alien.clear()
for alien in  nave:
    if alien[1]>18:
      print(f'{alien[0]} é maior de idade ')
    else:
      print(f'{alien[0]} é menor de idade ')

print(nave)

nave=list()
alien=list()

totalmaior  = totalmenor  = 0

for grey  in  range(0, 2):
  alien.append(str(input('Digite o nome do alien ')))
  alien.append(int(input('Digite a idade do maluco ')))
  print('alien a bordo')
  nave.append(alien[:])
  alien.clear()

for e in  nave:
    if  e[1]:
        print(f'{e[0]} é maior de idade \n')
        totalmaior+=1
    else:
        print(f'{e[0]} é menor de idade \n')
        totalmenor+=1

print(f'são {totalmaior} maiores e {totalmenor} menores de idade ')

"""# Containers em python

Dicionarios em python são estruturas complexas.

são parecidos com tuplas e as listas pois armazenam muitos dados

ao mesmo tempo

as listas e tuplas usam indices para acesso aos elementos

esses indices são numeros

os dicionarios são acessados de forma diferente

podemos usar nomes para acessar os elementos do dicionario

> O acesso usa uma combinação do dicionario

> chave=key

>valor=value
"""

# @title Definição tuplas, listas e Dicionarios

dados=tuple()   #como definir uma tupla

nomes=[]       #como definir uma lista versão 1

comidas=list()  #como definir uma lista versão 2

pessoas={}    #como definir um dicionario versão 1
idades=dict()   #como definir um dicionario versão 2

# @title Criando uma lista e reveendo seu acesso

lista=list()        #criando uma lista vazia

lista.append('marcos')      #adicionado um elemento na lista
lista.append(18)            # adicionando outro elemento na lista

# a lista  vai conter dois elemento, o elemento indice 0 e o elemento de indice 1

print(lista[0])    # o valor a ser exibido serqa o marcos

"""# Criando nosso primeiro dicionario"""

# Nosso dicionario

aurelio = {}  #criando o nosso dicionario

aurelio={'nome':'pedro', 'idade':23}

print(aurelio)

print(aurelio['nome'])
print(aurelio['idade'])

print('telefone'  in  aurelio)
print('Nome'  in aurelio)

# @title adicionando outro elemento ao dicionario

#aurelio.append('sobrenome')      # append nao funciona em dicionario

aurelio['sobrenome']  = 'oliveira'   #  Adicionar outro elemento

print(aurelio)

aurelio['sexo'] = 'M'

# @title  apagando um elemento em um dicionario

print(aurelio,'\n')

del aurelio['sobrenome']

print(aurelio)

"""Acessando componentes

Keys

Values

Itens

"""

# @title Acessando os componentes do dicionario

print(aurelio,'\n')

aurelio['idade']  =25   #alterando valor de um elemento

print(aurelio)

aurelio['turma']  = '1139'    # adicionando outro valor

print(aurelio,'\n')

print(aurelio.keys())

print(aurelio.values())

print(aurelio.items())

"""Percorrendo os elementos do dicionario: chaves

"""

# @title percorrendo os elementos do dicionario

print(aurelio)

for k in  aurelio.keys():
    print(k)

"""Percorrendo os elementos do dicionario:valores"""

from ast import FormattedValue
# @title Percorrendo os elementos do dicionario:valores

print(aurelio)

for v in  aurelio.values():
    print(aurelio)

"""percorrendo os elementos do dicionario:itens"""

#   @title percorrendo os elementos do dicionario:itens

print(aurelio,'\n')

for k,  v in  aurelio.items():
    print(f'{k} é {v}')

"""# Dicionarios podem pertencer a listas

crie um dicionario chamado filme para um fã de filmes de ficçao cientifica

com:

Titulo = 'star wars'

ano = 1977

diretor = 'george lucas'
"""

filme={'Titulo':'star wars','ano':'1997','diretor':'george lucas'}
print(filme)

"""Exercicio: crie um progama intera pelos elementos do dicionario e

exiba o conteudo na forma

Titulo = 'star wars'

ano = 1977

diretor = 'george lucas'
"""

print(filme)

for f,  g in  filme.items():
    print(f'{f} é {g}')

# exemplos de interação pelo dicionario

for chave,  valor in  filme.items():
    print(f'o {chave} é  {valor}')

"""Crie uma lista chamada "Locadora" que contenha os seguintes elementos:

Título = 'Star Wars'

Ano = 1977

Diretor = 'George Lucas'

---

Título = 'Superman'

Ano = 1978

Diretor = 'Richard Donner'

---

Título = 'Matrix'

Ano = 1999

Diretor = 'Os irmãos Whachowsky'
"""

locadora = list()

locadora.append({'Titulo': 'Star Wars', 'Ano' : 1977, 'Diretor' : 'Geroge Lucas\n'})
locadora.append({'Titulo':  'Superman', 'Ano': 1978, 'Diretor' : 'Geroge Lucas\n'})
locadora.append({'Titulo': ' Superman', 'Ano': 1999, 'Diretor': 'Geroge Lucas'})
print(locadora)

print(locadora[0]['Titulo'])
locadora.pop()

print(locadora)
locadora.append({'Titulo': ' Superman', 'Ano': 1999, 'Diretor': 'Geroge Lucas'})

print(locadora)

# Iterar pela lista e o dicionario

for i in  locadora:

"""Exercicio crie um dicionario que contenha preços de mercadorias

alface: o,45

batata:1,20

tomate:2,30

feijão:1,50
"""

mercado={'alface':0.45,'batata':1.20,'tomate':2.30,'feijao':1.50}

for r, i  in  mercado.items():
    print(f'O preço do {r} é R${i}')

# Exemplo de codigo que cria um dicionario

tabe=dict()

tabe['alface']=0.45
tabe['tomate']=1.20
tabe['feijao']=2.30
tabe['batata']=1.50

print(tabe)

for prod, pre in  tabela.item()
    print(f'O {prod} custa {pre:.2f}')

"""# Funções em Python
funçoes em python são usadoas para economizartempo e esforço

cuidam da rotina do codigo

quando um bloco de codigo precisa ser repitido muitas vezes,

outro uso da função é esconder os detalhes da execução


"""

# @title Uma função simples

# Essa função exibe uma mensagem simples e pre-definida
# Essa parte é a definição da funçao

def inicio():
    print('                 Inicio do progama                 \n')

#para usar essa função, é preciso chamar ela com o nome e parenteses

inicio()

# @title outra função

def final():
    print('                 Final do progama.......                  ')

final()

# Exemplo de codigo convocando funçoes pre-definidas

inicio()

final()

"""# Cuidado! a função so pode ser usada depois de ter sido criada"""

# Exemplo de tentativa de uso da função antes de ser usada

exemplo() # tentando invocar função que não foi declarada

def exemplo():
    print('função ja definida... Aproveite bem!')

"""# Funçoes com parametros

modifique a função inicio para que ela exiba, ou use, um parametro


"""

# Modificação da funçao inicio

def inicio(mensagem):
    print(f'                {mensagem}                  ')

def final(msg):
    print(f'          {msg}           ')

inicio('boa tarde SENAI')

inicio('Oi turma 1139')

final('um otimo final de semana....')

"""# Funções de exemplo- somar dois numeros

"""

# @title Função de exemplo dois numeros

# declaração da funçao

def somar(a=0,b=0): #assinatura da função com valores padrão
    return  print(f'A soma de {a} e {b} é {a+b}')

somar(5,9)          # os parametros a e b são posisionais, a é 1o e b é o 2o

somar()

# Exemplo de passagens de parametros posissionais

somar(b=5,a=8)